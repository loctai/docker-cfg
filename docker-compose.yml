version: '3.8'

services:
    nginx:
        container_name: manager-nginx
        build:
            context: .docker/nginx
            dockerfile: Dockerfile
        ports:
            - "80:80"
        volumes:
            - ./:/var/www/manager
        depends_on:
            - php-fpm
        networks:
            - manager

    php-fpm:
        container_name: manager-php-fpm
        build:
            context: .docker/php-fpm
            dockerfile: Dockerfile
        environment:
            DB_PORT: 5432
            DB_HOST: postgres
            REDIS_PORT: 6379
            REDIS_HOST: redis
            HISTFILE: '/home/www-data/bash-history/.bash_history'
            PHP_IDE_CONFIG: "serverName=Docker"
        expose:
          - 9000
        volumes:
            - ./manager:/var/www/manager
            - manager-bash-history:/home/www-data/bash-history/:rw
        depends_on:
            - postgres
            - redis
            - rabbitmq
        networks:
            - manager

    postgres:
        container_name: manager-postgres
        image: postgres:13.2-alpine
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        volumes:
            - postgres:/var/lib/postgresql/data
        ports:
            - ${POSTGRES_PORT}:5432
        networks:
            - manager
    pgadmin:
        container_name: manager-pgadmin
        image: dpage/pgadmin4
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
        ports:
            - "${PGADMIN_PORT}:80"
        volumes:
            - pgadmin:/var/lib/pgadmin
        restart: unless-stopped
        networks:
            - manager
        depends_on:
            - postgres

    redis:
        container_name: manager-redis
        image: redis:7.0.4-alpine
        restart: always
        command: redis-server --requirepass ${REDIS_PASSWORD}
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - manager

    rabbitmq:
        container_name: manager-rabbitmq
        build:
            context: .
            dockerfile: .docker/rabbitmq/Dockerfile
        ports:
            - "15672:15672"
            - "5672:5672"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
            interval: 30s
            timeout: 10s
            retries: 5
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq
        networks:
            - manager
    mailhog:
        container_name: manager-mailhog
        restart: always
        image: 'mailhog/mailhog:latest'
        ports:
            - ${MAILHOG_BOX_POST}:8025
            - ${MAILHOG_MAIL_PORT}:1025
        networks:
            - manager

volumes:
    postgres:
    redis:
    manager-bash-history:
    rabbitmq-data:
    pgadmin:
networks:
    manager:
        driver: bridge